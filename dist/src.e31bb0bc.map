{"version":3,"sources":["storages/objectBased.js","storages/localBased.js","layoutManager.js","../node_modules/melanke-watchjs/src/watch.js","timers/simple.js","timers/pomodoro.js","layouts/layout.js","layouts/timerLayout.js","formWrapper.js","layouts/settingsLayout.js","app.js","index.js"],"names":["ObjectBasedStorage","object","defaultStorage","storage","Map","Object","entries","key","has","get","value","set","LocalBasedStorage","localStorage","getItem","setItem","LayoutManager","start","layouts","events","goto","name","current","layoutName","onChange","SimpleTimer","time","stepDivider","remainigTime","interval","step","last","Date","now","setInterval","stop","onProgress","continue","clearInterval","onEnd","Boolean","PomodoroTimer","startState","state","timer","progress","console","error","pause","template","layout","document","createElement","className","innerHTML","statusTexts","ticking","paused","pomodoroCssClasses","work","shortBreak","longBreak","app","stateName","pomodoroType","pomodoroClick","statusElem","querySelector","progressElem","addEventListener","stopPomodoroElem","textContent","classList","remove","add","textProgress","Math","round","values","identity","x","FormWrapper","inputs","keys","filter","reduce","acc","formElement","form","getStartValues","onStart","newValues","assign","fillStartValues","event","preventDefault","Array","from","elements","forEach","elem","setValue","onSubmit","copy","cast","input","output","getCastFn","fn","getInputFn","getOutputFn","startValues","setStartValue","getValue","pomodoroSize","shortBreakSize","longBreakSize","cyclesCount","lastSaveTime","millisecondsInMinute","minutesFromMillisecondsInput","Number","settingsInputs","inputNamesAndStorageKeys","inputName","storageKey","formElem","formWrapper","formData","inputData","alert","PomodoroApp","defaultsPreferences","defaults","locals","settings","layoutManager","nextLayout","component","append"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAEqBA;;;AACnB,8BAAYC,MAAZ,EAAoBC,cAApB,EAAoC;AAAA;;AAClC,SAAKC,OAAL,GAAe,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeL,MAAf,CAAR,CAAf;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACD;;;;wBAEGK,KAAK;AACP,aAAO,KAAKJ,OAAL,CAAaK,GAAb,CAAiBD,GAAjB,CAAP;AACD;;;wBAEGA,KAAK;AACP,UAAI,CAAC,KAAKC,GAAL,CAASD,GAAT,CAAD,IAAkB,KAAKL,cAA3B,EAA2C;AACzC,eAAO,KAAKA,cAAL,CAAoBO,GAApB,CAAwBF,GAAxB,CAAP;AACD;;AACD,aAAO,KAAKJ,OAAL,CAAaM,GAAb,CAAiBF,GAAjB,CAAP;AACD;;;wBAEGA,KAAKG,OAAO;AACd,WAAKP,OAAL,CAAaQ,GAAb,CAAiBJ,GAAjB,EAAsBG,KAAtB;AACD;;;;;;;;;;;;;;;;;;;;;ICrBkBE;;;AACnB,6BAAYV,cAAZ,EAA4B;AAAA;;AAC1B,SAAKC,OAAL,GAAeU,YAAf;AACA,SAAKX,cAAL,GAAsBA,cAAtB;AACD;;;;wBAEGK,KAAK;AACP,aAAO,KAAKJ,OAAL,CAAaW,OAAb,CAAqBP,GAArB,KAA6B,IAApC;AACD;;;wBAEGA,KAAK;AACP,UAAI,CAAC,KAAKC,GAAL,CAASD,GAAT,CAAD,IAAkB,KAAKL,cAA3B,EAA2C;AACzC,eAAO,KAAKA,cAAL,CAAoBO,GAApB,CAAwBF,GAAxB,CAAP;AACD;;AACD,aAAO,KAAKJ,OAAL,CAAaW,OAAb,CAAqBP,GAArB,CAAP;AACD;;;wBAEGA,KAAKG,OAAO;AACd,WAAKP,OAAL,CAAaY,OAAb,CAAqBR,GAArB,EAA0BG,KAA1B;AACD;;;;;;;;;;;;;;;;;;;;;ICnBkBM;;;AACnB,+BAAwC;AAAA,QAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,QAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,QAAVC,MAAU,QAAVA,MAAU;;AAAA;;AACtC,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,CAAUH,KAAV;AACD;;;;2BAEMI,MAAM;AACX,UAAIA,IAAJ,EAAU;AACR,eAAO,KAAKH,OAAL,CAAaG,IAAb,CAAP;AACD;;AACD,aAAO,KAAKH,OAAL,CAAa,KAAKI,OAAlB,CAAP;AACD;;;yBAEIC,YAAY;AACf,UAAI,EAAEA,UAAU,IAAI,KAAKL,OAArB,CAAJ,EAAmC;AACjC;AACA;AACD;;AAED,UAAI,KAAKC,MAAL,CAAYK,QAAhB,EAA0B;AACxB,aAAKL,MAAL,CAAYK,QAAZ,CAAqB,IAArB,EAA2BD,UAA3B,EAAuC,KAAKD,OAA5C;AACD;;AACD,WAAKA,OAAL,GAAeC,UAAf;AACD;;;;;;;;;ACxBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjyBA;IACqBE;;;AACnB,6BAEG;AAAA,QADDC,IACC,QADDA,IACC;AAAA,2BADKP,MACL;AAAA,QADKA,MACL,4BADc,EACd;AAAA,gCADkBQ,WAClB;AAAA,QADkBA,WAClB,iCADgC,GAChC;;AAAA;;AACD,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKE,YAAL,GAAoBF,IAApB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKR,MAAL,GAAcA,MAAd;AACD;;;;gCAEU;AAAA;;AACT,UAAI,KAAKU,QAAT,EAAmB;AACjB;AACD,OAHQ,CAKT;;;AACA,UAAMC,IAAI,GAAG,KAAKJ,IAAL,GAAY,KAAKC,WAA9B;AACA,WAAKI,IAAL,GAAYC,IAAI,CAACC,GAAL,EAAZ;AAEA,WAAKJ,QAAL,GAAgBK,WAAW,CAAC,YAAM;AAChC,QAAA,KAAI,CAACN,YAAL,IAAsBI,IAAI,CAACC,GAAL,KAAa,KAAI,CAACF,IAAxC;;AAEA,YAAI,KAAI,CAACH,YAAL,IAAqB,CAAzB,EAA4B;AAC1B,UAAA,KAAI,CAACO,IAAL;;AACA;AACD;;AACD,YAAI,KAAI,CAAChB,MAAL,CAAYiB,UAAhB,EAA4B;AAC1B,UAAA,KAAI,CAACjB,MAAL,CAAYiB,UAAZ,CAAuB,IAAI,KAAI,CAACR,YAAL,GAAoB,KAAI,CAACF,IAApD;AACD;;AACD,QAAA,KAAI,CAACK,IAAL,GAAYC,IAAI,CAACC,GAAL,EAAZ;AACD,OAX0B,EAWxBH,IAXwB,CAA3B;AAYD;;;4BAEO;AACN,WAAKF,YAAL,GAAoB,KAAKF,IAAzB;AACA,WAAKW,QAAL;AACD;;;4BAEO;AACNC,MAAAA,aAAa,CAAC,KAAKT,QAAN,CAAb;AACA,WAAKA,QAAL,GAAgB,IAAhB;AACD;;;2BAEM;AACLS,MAAAA,aAAa,CAAC,KAAKT,QAAN,CAAb;AACA,WAAKA,QAAL,GAAgB,IAAhB;;AAEA,UAAI,KAAKV,MAAL,CAAYoB,KAAhB,EAAuB;AACrB,aAAKpB,MAAL,CAAYoB,KAAZ;AACD;AACF;;;+BAEU;AACT,aAAOC,OAAO,CAAC,KAAKX,QAAN,CAAd;AACD;;;;;;;;;;;;;;;ACrDH;;;;;;;;;;IAEqBY;;;AACnB,+BAA2D;AAAA;;AAAA,QAA7CtC,OAA6C,QAA7CA,OAA6C;AAAA,+BAApCuC,UAAoC;AAAA,QAApCA,UAAoC,gCAAvB,MAAuB;AAAA,2BAAfvB,MAAe;AAAA,QAAfA,MAAe,4BAAN,EAAM;;AAAA;;AACzD,SAAKhB,OAAL,GAAeA,OAAf;AACA,SAAKgB,MAAL,GAAcA,MAAd;AACA,SAAKwB,KAAL,GAAaD,UAAb;AAEA,SAAKE,KAAL,GAAa,IAAInB,eAAJ,CAAgB;AAC3BC,MAAAA,IAAI,EAAE,CADqB;AAE3BP,MAAAA,MAAM,EAAE;AACNiB,QAAAA,UAAU,EAAE,oBAACS,QAAD,EAAc;AACxB,cAAI,KAAI,CAAC1B,MAAL,CAAYiB,UAAhB,EAA4B;AAC1B,YAAA,KAAI,CAACjB,MAAL,CAAYiB,UAAZ,CAAuBS,QAAvB;AACD;AACF,SALK;AAMNN,QAAAA,KAAK,EAAE,iBAAM;AACX,kBAAQ,KAAI,CAACI,KAAb;AACE,iBAAK,MAAL;AAAa;AACX,gBAAA,KAAI,CAACA,KAAL,GAAa,YAAb;AACA;AACD;;AACD,iBAAK,YAAL;AAAmB;AACjB,gBAAA,KAAI,CAACA,KAAL,GAAa,MAAb;AACA;AACD;AACD;;AACA;AAAS;AACPG,gBAAAA,OAAO,CAACC,KAAR,+BAAqC,KAAI,CAACJ,KAA1C;AACD;AAZH;;AAcA,cAAI,KAAI,CAACxB,MAAL,CAAYoB,KAAhB,EAAuB;AACrB,YAAA,KAAI,CAACpB,MAAL,CAAYoB,KAAZ,CAAkB,KAAI,CAACI,KAAvB;AACD;AACF;AAxBK;AAFmB,KAAhB,CAAb;AA6BD;;;;4BAEO;AACN;AACA,cAAQ,KAAKA,KAAb;AACE,aAAK,MAAL;AAAa;AACX,iBAAKC,KAAL,CAAWlB,IAAX,GAAkB,KAAKvB,OAAL,CAAaM,GAAb,CAAiB,cAAjB,CAAlB;AACA;AACD;;AACD,aAAK,YAAL;AAAmB;AACjB,iBAAKmC,KAAL,CAAWlB,IAAX,GAAkB,KAAKvB,OAAL,CAAaM,GAAb,CAAiB,gBAAjB,CAAlB;AACA;AACD;;AACD,aAAK,WAAL;AAAkB;AAChB,iBAAKmC,KAAL,CAAWlB,IAAX,GAAkB,KAAKvB,OAAL,CAAaM,GAAb,CAAiB,eAAjB,CAAlB;AACA;AACD;;AACD;AAAS;AACPqC,YAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd;AACA;AACD;AAhBH;;AAmBA,WAAKH,KAAL,CAAW3B,KAAX;AACD;;;4BAEO;AACN,WAAK2B,KAAL,CAAWI,KAAX;AACD;;;gCAEU;AACT,WAAKJ,KAAL,CAAWP,QAAX;AACD;;;2BAEM;AACL,WAAKO,KAAL,CAAWT,IAAX;AACD;;;;;;;;;;;;;;;eC3EY,oBAAmB;AAAA,MAAlBc,QAAkB,uEAAP,EAAO;AAChC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAF,EAAAA,MAAM,CAACG,SAAP,GAAmB,QAAnB;AACAH,EAAAA,MAAM,CAACI,SAAP,GAAmBL,QAAnB;AAEA,SAAOC,MAAP;AACD;;;;;;;;;;;ACJD;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMD,QAAQ,2fAAd,EAeA;;AACA,IAAMM,WAAW,GAAG;AAClBtC,EAAAA,KAAK,EAAE,OADW;AAElBuC,EAAAA,OAAO,EAAE,OAFS;AAGlBC,EAAAA,MAAM,EAAE;AAHU,CAApB,EAMA;;AACA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,IAAI,EAAE,eADmB;AAEzBC,EAAAA,UAAU,EAAE,sBAFa;AAGzBC,EAAAA,SAAS,EAAE;AAHc,CAA3B;;eAMe,kBAACC,GAAD,EAAS;AACtB,MAAMZ,MAAM,GAAG,qBAAaD,QAAb,CAAf,CADsB,CAGtB;;AACA,MAAMN,KAAK,GAAG;AACZoB,IAAAA,SAAS,EAAE,OADC;AAEZC,IAAAA,YAAY,EAAE,MAFF;AAGZnB,IAAAA,QAAQ,EAAE,CAHE;AAIZD,IAAAA,KAAK,EAAE;AAJK,GAAd,CAJsB,CAWtB;AACA;;AACAD,EAAAA,KAAK,CAACC,KAAN,GAAc,IAAIH,iBAAJ,CAAkB;AAC9BtC,IAAAA,OAAO,EAAE2D,GAAG,CAAC3D,OADiB;AAE9BgB,IAAAA,MAAM,EAAE;AACNiB,MAAAA,UAAU,EAAE,oBAACS,QAAD,EAAc;AACxBF,QAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;AACD,OAHK;AAINN,MAAAA,KAAK,EAAE,eAACyB,YAAD,EAAkB;AACvBrB,QAAAA,KAAK,CAACoB,SAAN,GAAkB,OAAlB;AACApB,QAAAA,KAAK,CAACqB,YAAN,GAAqBA,YAArB;AACArB,QAAAA,KAAK,CAACE,QAAN,GAAiB,CAAjB;AACD;AARK;AAFsB,GAAlB,CAAd;;AAcA,MAAMoB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,YAAQtB,KAAK,CAACoB,SAAd;AACE,WAAK,OAAL;AAAc;AACZpB,UAAAA,KAAK,CAACoB,SAAN,GAAkB,SAAlB;AACApB,UAAAA,KAAK,CAACC,KAAN,CAAY3B,KAAZ;AACA;AACD;;AACD,WAAK,SAAL;AAAgB;AACd0B,UAAAA,KAAK,CAACoB,SAAN,GAAkB,QAAlB;AACApB,UAAAA,KAAK,CAACC,KAAN,CAAYI,KAAZ;AACA;AACD;;AACD,WAAK,QAAL;AAAe;AACbL,UAAAA,KAAK,CAACoB,SAAN,GAAkB,SAAlB;AACApB,UAAAA,KAAK,CAACC,KAAN,CAAYP,QAAZ;AACA;AACD;;AACD;AAAS;AACPS,UAAAA,OAAO,CAACC,KAAR,gCAAsCJ,KAAK,CAACoB,SAA5C;AACD;AAlBH;AAoBD,GArBD;;AAuBA,MAAMG,UAAU,GAAGhB,MAAM,CAACiB,aAAP,CAAqB,sBAArB,CAAnB;AACA,MAAMC,YAAY,GAAGlB,MAAM,CAACiB,aAAP,CAAqB,wBAArB,CAArB;AACAD,EAAAA,UAAU,CAACG,gBAAX,CAA4B,OAA5B,EAAqCJ,aAArC;AACAG,EAAAA,YAAY,CAACC,gBAAb,CAA8B,OAA9B,EAAuCJ,aAAvC;AAEAf,EAAAA,MAAM,CAACiB,aAAP,CAAqB,kBAArB,EAAyCE,gBAAzC,CAA0D,OAA1D,EAAmE,YAAM;AACvEP,IAAAA,GAAG,CAAC5C,OAAJ,CAAYE,IAAZ,CAAiB,UAAjB;AACD,GAFD;AAIA8B,EAAAA,MAAM,CAACiB,aAAP,CAAqB,uBAArB,EAA8CE,gBAA9C,CAA+D,OAA/D,EAAwE,YAAM;AAC5E1B,IAAAA,KAAK,CAACC,KAAN,CAAYT,IAAZ;AACD,GAFD,EA3DsB,CA+DtB;;AACA,MAAMmC,gBAAgB,GAAGpB,MAAM,CAACiB,aAAP,CAAqB,uBAArB,CAAzB,CAhEsB,CAkEtB;;AACA,6BAAMxB,KAAN,EAAa,WAAb,EAA0B,YAAM;AAC9BuB,IAAAA,UAAU,CAACK,WAAX,GAAyBhB,WAAW,CAACZ,KAAK,CAACoB,SAAP,CAApC;;AAEA,YAAQpB,KAAK,CAACoB,SAAd;AACE,WAAK,QAAL;AACA,WAAK,SAAL;AAAgB;AACdO,UAAAA,gBAAgB,CAACE,SAAjB,CAA2BC,MAA3B,CAAkC,OAAlC;AACA;AACD;;AACD;AAAS;AACPH,UAAAA,gBAAgB,CAACE,SAAjB,CAA2BE,GAA3B,CAA+B,OAA/B;AACA;AACD;AATH;AAWD,GAdD,EAnEsB,CAmFtB;;AACA,MAAMC,YAAY,GAAGzB,MAAM,CAACiB,aAAP,CAAqB,wBAArB,CAArB;AACA,6BAAMxB,KAAN,EAAa,UAAb,EAAyB,YAAM;AAC7BgC,IAAAA,YAAY,CAACJ,WAAb,aAA8BK,IAAI,CAACC,KAAL,CAAWlC,KAAK,CAACE,QAAN,GAAiB,GAA5B,CAA9B;AACD,GAFD,EArFsB,CAyFtB;;AACA,6BAAMF,KAAN,EAAa,cAAb,EAA6B,YAAM;AAAA;;AACjC,yBAAAO,MAAM,CAACsB,SAAP,EAAiBC,MAAjB,6CAA2BpE,MAAM,CAACyE,MAAP,CAAcpB,kBAAd,CAA3B;;AACAR,IAAAA,MAAM,CAACsB,SAAP,CAAiBE,GAAjB,CAAqBhB,kBAAkB,CAACf,KAAK,CAACqB,YAAP,CAAvC;AACD,GAHD,EA1FsB,CA8FtB;;AACAd,EAAAA,MAAM,CAACsB,SAAP,CAAiBE,GAAjB,CAAqBhB,kBAAkB,CAACf,KAAK,CAACqB,YAAP,CAAvC;AAEA,SAAOd,MAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACrID,IAAM6B,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAlB;;IAEqBC;;;;;qCACgB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;AACjC,aAAO7E,MAAM,CAAC8E,IAAP,CAAYD,MAAZ,EACJE,MADI,CACG,UAAA/D,IAAI;AAAA,eAAI6D,MAAM,CAAC7D,IAAD,CAAN,CAAaJ,KAAjB;AAAA,OADP,EAEJoE,MAFI,CAEG,UAACC,GAAD,EAAMjE,IAAN;AAAA,iCAAqBiE,GAArB,sBAA2BjE,IAA3B,EAAkC6D,MAAM,CAAC7D,IAAD,CAAN,CAAaJ,KAA/C;AAAA,OAFH,EAE4D,EAF5D,CAAP;AAGD;;;AAED,uBAAYsE,WAAZ,EAAmD;AAAA;;AAAA,QAA1BL,MAA0B,uEAAjB,EAAiB;AAAA,QAAb/D,MAAa,uEAAJ,EAAI;;AAAA;;AACjD,SAAKqE,IAAL,GAAYD,WAAZ;AACA,SAAKL,MAAL,GAAcA,MAAd;AACA,SAAK/D,MAAL,GAAcA,MAAd,CAHiD,CAKjD;AACA;;AACA,SAAK2D,MAAL,GAAcG,WAAW,CAACQ,cAAZ,CAA2BP,MAA3B,CAAd;;AAEA,QAAI,KAAK/D,MAAL,CAAYuE,OAAhB,EAAyB;AACvB,UAAMC,SAAS,GAAG,EAAlB;AACA,WAAKxE,MAAL,CAAYuE,OAAZ,CAAoBC,SAApB;AACA,WAAKb,MAAL,GAAczE,MAAM,CAACuF,MAAP,CAAc,KAAKd,MAAnB,EAA2Ba,SAA3B,CAAd;AACD;;AACD,SAAKE,eAAL,CAAqB,KAAKf,MAA1B;AAEA,SAAKU,IAAL,CAAUnB,gBAAV,CAA2B,QAA3B,EAAqC,UAACyB,KAAD,EAAW;AAC9C;AACAA,MAAAA,KAAK,CAACC,cAAN;AAEAC,MAAAA,KAAK,CAACC,IAAN,CAAW,KAAI,CAACT,IAAL,CAAUU,QAArB,EAA+BC,OAA/B,CAAuC,UAACC,IAAD,EAAU;AAC/C;AACA;AACA,QAAA,KAAI,CAACC,QAAL,CAAcD,IAAI,CAAC/E,IAAnB,EAAyB+E,IAAI,CAAC1F,KAA9B;AACD,OAJD;;AAMA,UAAI,KAAI,CAACS,MAAL,CAAYmF,QAAhB,EAA0B;AACxB,YAAMC,IAAI,GAAGlG,MAAM,CAACuF,MAAP,CAAc,EAAd,EAAkB,KAAI,CAACd,MAAvB,CAAb;;AACA,QAAA,KAAI,CAAC3D,MAAL,CAAYmF,QAAZ,CAAqBC,IAArB;AACD;AACF,KAdD;AAeD,IAED;;;;;8BACUlF,MAAM;AACd,UAAIA,IAAI,IAAI,KAAK6D,MAAb,IAAuB,KAAKA,MAAL,CAAY7D,IAAZ,EAAkBmF,IAA7C,EAAmD;AACjD,eAAO,KAAKtB,MAAL,CAAY7D,IAAZ,EAAkBmF,IAAzB;AACD;;AACD,aAAOzB,QAAP;AACD;;;+BAEU1D,MAAM;AACf,UAAIA,IAAI,IAAI,KAAK6D,MAAb,IAAuB,KAAKA,MAAL,CAAY7D,IAAZ,EAAkBoF,KAA7C,EAAoD;AAClD,eAAO,KAAKvB,MAAL,CAAY7D,IAAZ,EAAkBoF,KAAzB;AACD;;AACD,aAAO1B,QAAP;AACD;;;gCAEW1D,MAAM;AAChB,UAAIA,IAAI,IAAI,KAAK6D,MAAb,IAAuB,KAAKA,MAAL,CAAY7D,IAAZ,EAAkBqF,MAA7C,EAAqD;AACnD,eAAO,KAAKxB,MAAL,CAAY7D,IAAZ,EAAkBqF,MAAzB;AACD;;AACD,aAAO3B,QAAP;AACD;;;6BAEQ1D,MAAMX,OAAO;AACpB,UAAM8F,IAAI,GAAG,KAAKG,SAAL,CAAetF,IAAf,CAAb;AACA,UAAMuF,EAAE,GAAG,KAAKC,UAAL,CAAgBxF,IAAhB,CAAX;AACA,WAAKyD,MAAL,CAAYzD,IAAZ,IAAoBuF,EAAE,CAACJ,IAAI,CAAC9F,KAAD,CAAL,CAAtB;AACD;;;6BAEQW,MAAM;AACb,UAAMmF,IAAI,GAAG,KAAKG,SAAL,CAAetF,IAAf,CAAb;AACA,UAAMuF,EAAE,GAAG,KAAKE,WAAL,CAAiBzF,IAAjB,CAAX;AACA,aAAOuF,EAAE,CAACJ,IAAI,CAAC,KAAK1B,MAAL,CAAYzD,IAAZ,CAAD,CAAL,CAAT;AACD;;;kCAEaA,MAAMX,OAAO;AACzB,UAAM8F,IAAI,GAAG,KAAKG,SAAL,CAAetF,IAAf,CAAb;AACA,WAAKyD,MAAL,CAAYzD,IAAZ,IAAoBmF,IAAI,CAAC9F,KAAD,CAAxB;AACD;;;oCAEeqG,aAAa;AAAA;;AAC3B1G,MAAAA,MAAM,CAAC8E,IAAP,CAAY4B,WAAZ,EAAyBZ,OAAzB,CAAiC,UAAC5F,GAAD,EAAS;AACxC,QAAA,MAAI,CAACyG,aAAL,CAAmBzG,GAAnB,EAAwBwG,WAAW,CAACxG,GAAD,CAAnC;;AACA,QAAA,MAAI,CAACiF,IAAL,CAAUU,QAAV,CAAmB3F,GAAnB,EAAwBG,KAAxB,GAAgC,MAAI,CAACuG,QAAL,CAAc1G,GAAd,CAAhC;AACD,OAHD;AAID;;;;;;;;;;;;;;;ACrFH;;AACA;;AACA;;;;AAHA;AAKA,IAAM0C,QAAQ,mqDAAd;;eAwCe,kBAACa,GAAD,EAAS;AACtB,MAAMZ,MAAM,GAAG,qBAAaD,QAAb,CAAf;AACAC,EAAAA,MAAM,CAACsB,SAAP,CAAiBE,GAAjB,CAAqB,iBAArB,EAFsB,CAItB;;AACA,MAAM/B,KAAK,GAAG;AACZ;AACA;AACAuE,IAAAA,YAAY,EAAE,IAHF;AAIZC,IAAAA,cAAc,EAAE,IAJJ;AAKZC,IAAAA,aAAa,EAAE,IALH;AAMZC,IAAAA,WAAW,EAAE,IAND;AAOZC,IAAAA,YAAY,EAAE;AAPF,GAAd,CALsB,CAetB;;AACApE,EAAAA,MAAM,CAACiB,aAAP,CAAqB,kBAArB,EAAyCE,gBAAzC,CAA0D,OAA1D,EAAmE,YAAM;AACvEP,IAAAA,GAAG,CAAC5C,OAAJ,CAAYE,IAAZ,CAAiB,OAAjB;AACD,GAFD,EAhBsB,CAoBtB;;AACA,MAAMmG,oBAAoB,GAAG,KAAK,IAAlC;AACA,MAAMC,4BAA4B,GAAG;AACnChB,IAAAA,IAAI,EAAE,cAAAxB,CAAC;AAAA,aAAIyC,MAAM,CAACzC,CAAD,CAAV;AAAA,KAD4B;AAEnCyB,IAAAA,KAAK,EAAE,eAAAzB,CAAC;AAAA,aAAIA,CAAC,GAAGuC,oBAAR;AAAA,KAF2B;AAGnCb,IAAAA,MAAM,EAAE,gBAAA1B,CAAC;AAAA,aAAIA,CAAC,GAAGuC,oBAAR;AAAA;AAH0B,GAArC;AAKA,MAAMG,cAAc,GAAG;AACrB,iBAAaF,4BADQ;AAErB,wBAAoBA,4BAFC;AAGrB,uBAAmBA,4BAHE;AAIrB,oBAAgB;AAAEhB,MAAAA,IAAI,EAAE,cAAAxB,CAAC;AAAA,eAAIyC,MAAM,CAACzC,CAAD,CAAV;AAAA;AAAT;AAJK,GAAvB,CA3BsB,CAkCtB;;AACA,MAAM2C,wBAAwB,GAAG,CAC/B;AAAEC,IAAAA,SAAS,EAAE,WAAb;AAA0BC,IAAAA,UAAU,EAAE;AAAtC,GAD+B,EAE/B;AAAED,IAAAA,SAAS,EAAE,kBAAb;AAAiCC,IAAAA,UAAU,EAAE;AAA7C,GAF+B,EAG/B;AAAED,IAAAA,SAAS,EAAE,iBAAb;AAAgCC,IAAAA,UAAU,EAAE;AAA5C,GAH+B,EAI/B;AAAED,IAAAA,SAAS,EAAE,cAAb;AAA6BC,IAAAA,UAAU,EAAE;AAAzC,GAJ+B,CAAjC;AAOA,MAAMC,QAAQ,GAAG5E,MAAM,CAACiB,aAAP,CAAqB,gBAArB,CAAjB,CA1CsB,CA2CtB;;AACA,MAAM4D,WAAW,GAAG,IAAI9C,oBAAJ,CAAgB6C,QAAhB,EAA0BJ,cAA1B,EAA0C;AAC5DhC,IAAAA,OAAO,EAAE,iBAACsC,QAAD,EAAc;AACrBL,MAAAA,wBAAwB,CAACxB,OAAzB,CAAiC,UAAC8B,SAAD,EAAe;AAC9CD,QAAAA,QAAQ,CAACC,SAAS,CAACL,SAAX,CAAR,GAAgC9D,GAAG,CAAC3D,OAAJ,CAAYM,GAAZ,CAAgBwH,SAAS,CAACJ,UAA1B,CAAhC;AACD,OAFD;AAGD,KAL2D;AAM5DvB,IAAAA,QAAQ,EAAE,kBAAC0B,QAAD,EAAc;AACtBL,MAAAA,wBAAwB,CAACxB,OAAzB,CAAiC,UAAC8B,SAAD,EAAe;AAC9CnE,QAAAA,GAAG,CAAC3D,OAAJ,CAAYQ,GAAZ,CAAgBsH,SAAS,CAACJ,UAA1B,EAAsCG,QAAQ,CAACC,SAAS,CAACL,SAAX,CAA9C;AACD,OAFD;AAIAjF,MAAAA,KAAK,CAAC2E,YAAN,GAAqBtF,IAAI,CAACC,GAAL,EAArB;AACD;AAZ2D,GAA1C,CAApB,CA5CsB,CA2DtB;;AACA,6BAAMU,KAAN,EAAa,cAAb,EAA6B,YAAM;AACjC;AACAuF,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,GAHD;AAKA,SAAOhF,MAAP;AACD;;;;;;;;;;;AC/GD;;AACA;;AACA;;AACA;;AACA;;;;;;IAEqBiF,cACnB,2BAAgD;AAAA;;AAAA,MAAlC/B,IAAkC,QAAlCA,IAAkC;AAAA,mCAA5BgC,mBAA4B;AAAA,MAA5BA,mBAA4B,sCAAN,EAAM;;AAAA;;AAC9C,OAAKhC,IAAL,GAAYA,IAAZ,CAD8C,CAG9C;;AACA,MAAMiC,QAAQ,GAAG,IAAIrI,oBAAJ,CAAuBoI,mBAAvB,CAAjB;AACA,MAAME,MAAM,GAAG,IAAI1H,mBAAJ,CAAsByH,QAAtB,CAAf;AACA,OAAKlI,OAAL,GAAemI,MAAf,CAN8C,CAQ9C;;AACA,OAAKpH,OAAL,GAAe,IAAIF,sBAAJ,CAAkB;AAC/BC,IAAAA,KAAK,EAAE,UADwB;AAE/BC,IAAAA,OAAO,EAAE;AACP0B,MAAAA,KAAK,EAAE,0BAAY,IAAZ,CADA;AAEP2F,MAAAA,QAAQ,EAAE,6BAAe,IAAf;AAFH,KAFsB;AAM/BpH,IAAAA,MAAM,EAAE;AACNK,MAAAA,QAAQ,EAAE,kBAACgH,aAAD,EAAgBC,UAAhB,EAA+B;AACvC;AACA,YAAMC,SAAS,GAAGF,aAAa,CAACtF,MAAd,CAAqBuF,UAArB,CAAlB;AACA,QAAA,KAAI,CAACrC,IAAL,CAAU9C,SAAV,GAAsB,EAAtB;;AACA,QAAA,KAAI,CAAC8C,IAAL,CAAUuC,MAAV,CAAiBD,SAAjB;AACD;AANK;AANuB,GAAlB,CAAf;AAeD;;;;;;;;;;;AC/BH;;;;eAEe,IAAIP,YAAJ,CAAgB;AAC7B/B,EAAAA,IAAI,EAAEjD,QAAQ,CAACgB,aAAT,CAAuB,MAAvB,CADuB;AAE7BiE,EAAAA,mBAAmB,EAAE;AACnB;AACAlB,IAAAA,YAAY,EAAE,KAAK,EAAL,GAAU,IAFL;AAGnBC,IAAAA,cAAc,EAAE,IAAI,EAAJ,GAAS,IAHN;AAInBC,IAAAA,aAAa,EAAE,KAAK,EAAL,GAAU,IAJN;AAKnBC,IAAAA,WAAW,EAAE;AALM;AAFQ,CAAhB","file":"src.e31bb0bc.map","sourceRoot":"../src","sourcesContent":["// TODO: Write unit-tests\n\nexport default class ObjectBasedStorage {\n  constructor(object, defaultStorage) {\n    this.storage = new Map(Object.entries(object));\n    this.defaultStorage = defaultStorage;\n  }\n\n  has(key) {\n    return this.storage.has(key);\n  }\n\n  get(key) {\n    if (!this.has(key) && this.defaultStorage) {\n      return this.defaultStorage.get(key);\n    }\n    return this.storage.get(key);\n  }\n\n  set(key, value) {\n    this.storage.set(key, value);\n  }\n}\n","export default class LocalBasedStorage {\n  constructor(defaultStorage) {\n    this.storage = localStorage;\n    this.defaultStorage = defaultStorage;\n  }\n\n  has(key) {\n    return this.storage.getItem(key) != null;\n  }\n\n  get(key) {\n    if (!this.has(key) && this.defaultStorage) {\n      return this.defaultStorage.get(key);\n    }\n    return this.storage.getItem(key);\n  }\n\n  set(key, value) {\n    this.storage.setItem(key, value);\n  }\n}\n","export default class LayoutManager {\n  constructor({ start, layouts, events }) {\n    this.layouts = layouts;\n    this.events = events;\n    this.goto(start);\n  }\n\n  layout(name) {\n    if (name) {\n      return this.layouts[name];\n    }\n    return this.layouts[this.current];\n  }\n\n  goto(layoutName) {\n    if (!(layoutName in this.layouts)) {\n      // TODO: Maybe throw an exception?\n      return;\n    }\n\n    if (this.events.onChange) {\n      this.events.onChange(this, layoutName, this.current);\n    }\n    this.current = layoutName;\n  }\n}\n","/**\n * DEVELOPED BY\n * GIL LOPES BUENO\n * gilbueno.mail@gmail.com\n *\n * WORKS WITH:\n * IE8*, IE 9+, FF 4+, SF 5+, WebKit, CH 7+, OP 12+, BESEN, Rhino 1.7+\n * For IE8 (and other legacy browsers) WatchJS will use dirty checking  \n *\n * FORK:\n * https://github.com/melanke/Watch.JS\n *\n * LICENSE: MIT\n */\n\n\"use strict\";\n(function (factory) {\n    if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else {\n        // Browser globals\n        window.WatchJS = factory();\n        window.watch = window.WatchJS.watch;\n        window.unwatch = window.WatchJS.unwatch;\n        window.callWatchers = window.WatchJS.callWatchers;\n    }\n}(function () {\n\n    var WatchJS = {\n        noMore: false,        // use WatchJS.suspend(obj) instead\n        useDirtyCheck: false, // use only dirty checking to track changes.\n        preserveExistingSetters: false\n    },\n    lengthsubjects = [];\n    \n    var dirtyChecklist = [];\n    var pendingChanges = []; // used coalesce changes from defineProperty and __defineSetter__\n    \n    var supportDefineProperty = false;\n    try {\n        supportDefineProperty = Object.defineProperty && Object.defineProperty({},'x', {});\n    } catch(ex) {  /* not supported */  }\n\n    var isFunction = function (functionToCheck) {\n        var getType = {};\n        return functionToCheck && getType.toString.call(functionToCheck) == '[object Function]';\n    };\n\n    var isInt = function (x) {\n        return x % 1 === 0;\n    };\n\n    var isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    var isObject = function(obj) {\n        return {}.toString.apply(obj) === '[object Object]';\n    };\n    \n    var getObjDiff = function(a, b){\n        var aplus = [],\n        bplus = [];\n\n        if(!(typeof a == \"string\") && !(typeof b == \"string\")){\n\n            if (isArray(a) && b) {\n                for (var i=0; i<a.length; i++) {\n                    if (b[i] === undefined) aplus.push(i);\n                }\n            } else {\n                for(var i in a){\n                    if (a.hasOwnProperty(i)) {\n                        if(b && !b.hasOwnProperty(i)) {\n                            aplus.push(i);\n                        }\n                    }\n                }\n            }\n\n            if (isArray(b) && a) {\n                for (var j=0; j<b.length; j++) {\n                    if (a[j] === undefined) bplus.push(j);\n                }\n            } else {\n                for(var j in b){\n                    if (b.hasOwnProperty(j)) {\n                        if(a && !a.hasOwnProperty(j)) {\n                            bplus.push(j);\n                        }\n                    }\n                }\n            }\n        }\n\n        return {\n            added: aplus,\n            removed: bplus\n        }\n    };\n\n    var clone = function(obj){\n\n        if (null == obj || \"object\" != typeof obj) {\n            return obj;\n        }\n\n        var copy = obj.constructor();\n\n        for (var attr in obj) {\n            copy[attr] = obj[attr];\n        }\n\n        return copy;        \n\n    }\n\n    var getExistingSetter = function (obj, propName) {\n        if (WatchJS.preserveExistingSetters) {\n            var existing = Object.getOwnPropertyDescriptor(obj, propName);\n            return existing.set;\n        }\n\n        return undefined;\n    }\n\n    var defineGetAndSet = function (obj, propName, getter, setter) {\n        try {\n            var existingSetter = getExistingSetter(obj, propName);\n            Object.defineProperty(obj, propName, {\n                get: getter,\n                set: function(value) {\n                    setter.call(this, value, true); // coalesce changes\n                    if (existingSetter) {\n                        existingSetter(value);\n                    }\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n        catch(e1) {\n            try{\n                Object.prototype.__defineGetter__.call(obj, propName, getter);\n                Object.prototype.__defineSetter__.call(obj, propName, function(value) {\n                    setter.call(this,value,true); // coalesce changes\n                });\n            }\n            catch(e2) {\n                observeDirtyChanges(obj,propName,setter);\n                //throw new Error(\"watchJS error: browser not supported :/\")\n            }\n        }\n\n    };\n\n    var defineProp = function (obj, propName, value) {\n        try {\n            Object.defineProperty(obj, propName, {\n                enumerable: false,\n                configurable: true,\n                writable: false,\n                value: value\n            });\n        } catch(error) {\n            obj[propName] = value;\n        }\n    };\n\n    var observeDirtyChanges = function(obj,propName,setter) {\n        dirtyChecklist[dirtyChecklist.length] = {\n            prop:       propName,\n            object:     obj,\n            orig:       clone(obj[propName]),\n            callback:   setter\n        }        \n    }\n    \n    var watch = function () {\n\n        if (isFunction(arguments[1])) {\n            watchAll.apply(this, arguments);\n        } else if (isArray(arguments[1])) {\n            watchMany.apply(this, arguments);\n        } else {\n            watchOne.apply(this, arguments);\n        }\n\n    };\n\n\n    var watchAll = function (obj, watcher, level, addNRemove) {\n\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if(isArray(obj)) {\n            defineWatcher(obj, \"__watchall__\", watcher, level); // watch all changes on the array\n            if (level===undefined||level > 0) {\n                for (var prop = 0; prop < obj.length; prop++) { // watch objects in array\n                   watchAll(obj[prop],watcher,level, addNRemove);\n                }\n            }\n        } \n        else {\n            var prop,props = [];\n            for (prop in obj) { //for each attribute if obj is an object\n                if (prop == \"$val\" || (!supportDefineProperty && prop === 'watchers')) {\n                    continue;\n                }\n\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                    props.push(prop); //put in the props\n                }\n            }\n            watchMany(obj, props, watcher, level, addNRemove); //watch all items of the props\n        }\n\n\n        if (addNRemove) {\n            pushToLengthSubjects(obj, \"$$watchlengthsubjectroot\", watcher, level);\n        }\n    };\n\n\n    var watchMany = function (obj, props, watcher, level, addNRemove) {\n\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        for (var i=0; i<props.length; i++) { //watch each property\n            var prop = props[i];\n            watchOne(obj, prop, watcher, level, addNRemove);\n        }\n\n    };\n\n    var watchOne = function (obj, prop, watcher, level, addNRemove) {\n        if ((typeof obj == \"string\") || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if(isFunction(obj[prop])) { //dont watch if it is a function\n            return;\n        }\n        if(obj[prop] != null && (level === undefined || level > 0)){\n            watchAll(obj[prop], watcher, level!==undefined? level-1 : level); //recursively watch all attributes of this\n        }\n\n        defineWatcher(obj, prop, watcher, level);\n\n        if(addNRemove && (level === undefined || level > 0)){\n            pushToLengthSubjects(obj, prop, watcher, level);\n        }\n\n    };\n\n    var unwatch = function () {\n\n        if (isFunction(arguments[1])) {\n            unwatchAll.apply(this, arguments);\n        } else if (isArray(arguments[1])) {\n            unwatchMany.apply(this, arguments);\n        } else {\n            unwatchOne.apply(this, arguments);\n        }\n\n    };\n\n    var unwatchAll = function (obj, watcher) {\n\n        if (obj instanceof String || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)\n            return;\n        }\n\n        if (isArray(obj)) {\n            var props = ['__watchall__'];\n            for (var prop = 0; prop < obj.length; prop++) { //for each item if obj is an array\n                props.push(prop); //put in the props\n            }\n            unwatchMany(obj, props, watcher); //watch all itens of the props\n        } else {\n            var unwatchPropsInObject = function (obj2) {\n                var props = [];\n                for (var prop2 in obj2) { //for each attribute if obj is an object\n                    if (obj2.hasOwnProperty(prop2)) {\n                        if (obj2[prop2] instanceof Object) {\n                            unwatchPropsInObject(obj2[prop2]); //recurs into object props\n                        } else {\n                            props.push(prop2); //put in the props\n                        }\n                    }\n                }\n                unwatchMany(obj2, props, watcher); //unwatch all of the props\n            };\n            unwatchPropsInObject(obj);\n        }\n    };\n\n\n    var unwatchMany = function (obj, props, watcher) {\n\n        for (var prop2 in props) { //watch each attribute of \"props\" if is an object\n            if (props.hasOwnProperty(prop2)) {\n                unwatchOne(obj, props[prop2], watcher);\n            }\n        }\n    };\n\n    var timeouts = [],\n        timerID = null;\n    function clearTimerID() {\n        timerID = null;\n        for(var i=0; i< timeouts.length; i++) {\n            timeouts[i]();\n        }\n        timeouts.length = 0;\n    }\n    var getTimerID= function () {\n        if (!timerID)  {\n            timerID = setTimeout(clearTimerID);\n        }\n        return timerID;\n    }\n    var registerTimeout = function(fn) { // register function to be called on timeout\n        if (timerID==null) getTimerID();\n        timeouts[timeouts.length] = fn;\n    }\n    \n    // Track changes made to an array, object or an object's property \n    // and invoke callback with a single change object containing type, value, oldvalue and array splices\n    // Syntax: \n    //      trackChange(obj, callback, recursive, addNRemove)\n    //      trackChange(obj, prop, callback, recursive, addNRemove)\n    var trackChange = function() {\n        var fn = (isFunction(arguments[2])) ? trackProperty : trackObject ;\n        fn.apply(this,arguments);\n    }\n\n    // track changes made to an object and invoke callback with a single change object containing type, value and array splices\n    var trackObject= function(obj, callback, recursive, addNRemove) {\n        var change = null,lastTimerID = -1;\n        var isArr = isArray(obj);\n        var level,fn = function(prop, action, newValue, oldValue) {\n            var timerID = getTimerID();\n            if (lastTimerID!==timerID) { // check if timer has changed since last update\n                lastTimerID = timerID;\n                change = {\n                    type: 'update'\n                }\n                change['value'] = obj;\n                change['splices'] = null;\n                registerTimeout(function() {\n                    callback.call(this,change);\n                    change = null;\n                });\n            }\n            // create splices for array changes\n            if (isArr && obj === this && change !== null)  {                \n                if (action==='pop'||action==='shift') {\n                    newValue = [];\n                    oldValue = [oldValue];\n                }\n                else if (action==='push'||action==='unshift') {\n                    newValue = [newValue];\n                    oldValue = [];\n                }\n                else if (action!=='splice') { \n                    return; // return here - for reverse and sort operations we don't need to return splices. a simple update will do\n                }\n                if (!change.splices) change.splices = [];\n                change.splices[change.splices.length] = {\n                    index: prop,\n                    deleteCount: oldValue ? oldValue.length : 0,\n                    addedCount: newValue ? newValue.length : 0,\n                    added: newValue,\n                    deleted: oldValue\n                };\n            }\n\n        }  \n        level = (recursive==true) ? undefined : 0;        \n        watchAll(obj,fn, level, addNRemove);\n    }\n    \n    // track changes made to the property of an object and invoke callback with a single change object containing type, value, oldvalue and splices\n    var trackProperty = function(obj,prop,callback,recursive, addNRemove) { \n        if (obj && prop) {\n            watchOne(obj,prop,function(prop, action, newvalue, oldvalue) {\n                var change = {\n                    type: 'update'\n                }\n                change['value'] = newvalue;\n                change['oldvalue'] = oldvalue;\n                if (recursive && isObject(newvalue)||isArray(newvalue)) {\n                    trackObject(newvalue,callback,recursive, addNRemove);\n                }               \n                callback.call(this,change);\n            },0)\n            \n            if (recursive && isObject(obj[prop])||isArray(obj[prop])) {\n                trackObject(obj[prop],callback,recursive, addNRemove);\n            }                           \n        }\n    }\n    \n    \n    var defineWatcher = function (obj, prop, watcher, level) {\n        var newWatcher = false;\n        var isArr = isArray(obj);\n        \n        if (!obj.watchers) {\n            defineProp(obj, \"watchers\", {});\n            if (isArr) {\n                // watch array functions\n                watchFunctions(obj, function(index,action,newValue, oldValue) {\n                    addPendingChange(obj, index, action,newValue, oldValue);\n                    if (level !== 0 && newValue && (isObject(newValue) || isArray(newValue))) {\n                        var i,n, ln, wAll, watchList = obj.watchers[prop];\n                        if ((wAll = obj.watchers['__watchall__'])) {\n                            watchList = watchList ? watchList.concat(wAll) : wAll;\n                        }\n                        ln = watchList ?  watchList.length : 0;\n                        for (i = 0; i<ln; i++) {\n                            if (action!=='splice') {\n                                watchAll(newValue, watchList[i], (level===undefined)?level:level-1);\n                            }\n                            else {\n                                // watch spliced values\n                                for(n=0; n < newValue.length; n++) {\n                                    watchAll(newValue[n], watchList[i], (level===undefined)?level:level-1);\n                                }\n                            }\n                        }\n                    }\n                });\n            }\n        }\n\n        if (!obj.watchers[prop]) {\n            obj.watchers[prop] = [];\n            if (!isArr) newWatcher = true;\n        }\n\n        for (var i=0; i<obj.watchers[prop].length; i++) {\n            if(obj.watchers[prop][i] === watcher){\n                return;\n            }\n        }\n\n        obj.watchers[prop].push(watcher); //add the new watcher to the watchers array\n\n        if (newWatcher) {\n            var val = obj[prop];            \n            var getter = function () {\n                return val;                        \n            };\n\n            var setter = function (newval, delayWatcher) {\n                var oldval = val;\n                val = newval;                \n                if (level !== 0 \n                    && obj[prop] && (isObject(obj[prop]) || isArray(obj[prop]))\n                    && !obj[prop].watchers) {\n                    // watch sub properties\n                    var i,ln = obj.watchers[prop].length; \n                    for(i=0; i<ln; i++) {\n                        watchAll(obj[prop], obj.watchers[prop][i], (level===undefined)?level:level-1);\n                    }\n                }\n\n                //watchFunctions(obj, prop);\n                \n                if (isSuspended(obj, prop)) {\n                    resume(obj, prop);\n                    return;\n                }\n\n                if (!WatchJS.noMore){ // this does not work with Object.observe\n                    //if (JSON.stringify(oldval) !== JSON.stringify(newval)) {\n                    if (oldval !== newval) {\n                        if (!delayWatcher) {\n                            callWatchers(obj, prop, \"set\", newval, oldval);\n                        }\n                        else {\n                            addPendingChange(obj, prop, \"set\", newval, oldval);\n                        }\n                        WatchJS.noMore = false;\n                    }\n                }\n            };\n\n            if (WatchJS.useDirtyCheck) {\n                observeDirtyChanges(obj,prop,setter);\n            }\n            else {\n                defineGetAndSet(obj, prop, getter, setter);\n            }\n        }\n\n    };\n\n    var callWatchers = function (obj, prop, action, newval, oldval) {\n        if (prop !== undefined) {\n            var ln, wl, watchList = obj.watchers[prop];\n            if ((wl = obj.watchers['__watchall__'])) {\n                watchList = watchList ? watchList.concat(wl) : wl;\n            }\n            ln = watchList ? watchList.length : 0;\n            for (var wr=0; wr< ln; wr++) {\n                watchList[wr].call(obj, prop, action, newval, oldval);\n            }\n        } else {\n            for (var prop in obj) {//call all\n                if (obj.hasOwnProperty(prop)) {\n                    callWatchers(obj, prop, action, newval, oldval);\n                }\n            }\n        }\n    };\n\n    var methodNames = ['pop', 'push', 'reverse', 'shift', 'sort', 'slice', 'unshift', 'splice'];\n    var defineArrayMethodWatcher = function (obj, original, methodName, callback) {\n        defineProp(obj, methodName, function () {\n            var index = 0;\n            var i,newValue, oldValue, response;                        \n            // get values before splicing array \n            if (methodName === 'splice') {\n               var start = arguments[0];\n               var end = start + arguments[1];\n               oldValue = obj.slice(start,end);\n               newValue = [];\n               for(i=2;i<arguments.length;i++) {\n                   newValue[i-2] = arguments[i];\n               }\n               index = start;\n            } \n            else {\n                newValue = arguments.length > 0 ? arguments[0] : undefined;\n            } \n\n            response = original.apply(obj, arguments);\n            if (methodName !== 'slice') {\n                if (methodName === 'pop') {\n                    oldValue = response;\n                    index = obj.length;\n                }\n                else if (methodName === 'push') {\n                    index = obj.length-1;\n                }\n                else if (methodName === 'shift') {\n                    oldValue = response;\n                }\n                else if (methodName !== 'unshift' && newValue===undefined) {\n                    newValue = response;\n                }\n                callback.call(obj, index, methodName,newValue, oldValue)\n            }\n            return response;\n        });\n    };\n\n    var watchFunctions = function(obj, callback) {\n\n        if (!isFunction(callback) || !obj || (obj instanceof String) || (!isArray(obj))) {\n            return;\n        }\n\n        for (var i = methodNames.length, methodName; i--;) {\n            methodName = methodNames[i];\n            defineArrayMethodWatcher(obj, obj[methodName], methodName, callback);\n        }\n\n    };\n\n    var unwatchOne = function (obj, prop, watcher) {\n        if (prop) {\n            if (obj.watchers && obj.watchers[prop]) {\n                if (watcher === undefined) {\n                    delete obj.watchers[prop]; // remove all property watchers\n                }\n                else {\n                    for (var i = 0; i < obj.watchers[prop].length; i++) {\n                        var w = obj.watchers[prop][i];\n                        if (w == watcher) {\n                            obj.watchers[prop].splice(i, 1);\n                        }\n                    }\n                }\n            }\n        } else {\n            delete obj.watchers;\n        }\n\n        removeFromLengthSubjects(obj, prop, watcher);\n        removeFromDirtyChecklist(obj, prop);\n    };\n    \n    // suspend watchers until next update cycle\n    var suspend = function(obj, prop) {\n        if (obj.watchers) {\n            var name = '__wjs_suspend__'+(prop!==undefined ? prop : '');\n            obj.watchers[name] = true;\n        }\n    }\n    \n    var isSuspended = function(obj, prop) {\n        return obj.watchers \n               && (obj.watchers['__wjs_suspend__'] || \n                   obj.watchers['__wjs_suspend__'+prop]);\n    }\n    \n    // resumes preivously suspended watchers\n    var resume = function(obj, prop) {\n        registerTimeout(function() {\n            delete obj.watchers['__wjs_suspend__'];\n            delete obj.watchers['__wjs_suspend__'+prop];\n        })\n    }\n\n    var pendingTimerID = null;\n    var addPendingChange = function(obj,prop, mode, newval, oldval) {\n        pendingChanges[pendingChanges.length] = {\n            obj:obj,\n            prop: prop,\n            mode: mode,\n            newval: newval,\n            oldval: oldval\n        };\n        if (pendingTimerID===null) {\n            pendingTimerID = setTimeout(applyPendingChanges);\n        }\n    };\n    \n    \n    var applyPendingChanges = function()  {\n        // apply pending changes\n        var change = null;\n        pendingTimerID = null;\n        for(var i=0;i < pendingChanges.length;i++) {\n            change = pendingChanges[i];\n            callWatchers(change.obj, change.prop, change.mode, change.newval, change.oldval);\n        }\n        if (change) {\n            pendingChanges = [];\n            change = null;\n        }        \n    }\n\n    var loop = function(){\n\n        // check for new or deleted props\n        for(var i=0; i<lengthsubjects.length; i++) {\n\n            var subj = lengthsubjects[i];\n\n            if (subj.prop === \"$$watchlengthsubjectroot\") {\n\n                var difference = getObjDiff(subj.obj, subj.actual);\n\n                if(difference.added.length || difference.removed.length){\n                    if(difference.added.length){\n                        watchMany(subj.obj, difference.added, subj.watcher, subj.level - 1, true);\n                    }\n\n                    subj.watcher.call(subj.obj, \"root\", \"differentattr\", difference, subj.actual);\n                }\n                subj.actual = clone(subj.obj);\n\n\n            } else {\n\n                var difference = getObjDiff(subj.obj[subj.prop], subj.actual);\n\n                if(difference.added.length || difference.removed.length){\n                    if(difference.added.length){\n                        for (var j=0; j<subj.obj.watchers[subj.prop].length; j++) {\n                            watchMany(subj.obj[subj.prop], difference.added, subj.obj.watchers[subj.prop][j], subj.level - 1, true);\n                        }\n                    }\n\n                    callWatchers(subj.obj, subj.prop, \"differentattr\", difference, subj.actual);\n                }\n\n                subj.actual = clone(subj.obj[subj.prop]);\n\n            }\n\n        }\n        \n        // start dirty check\n        var n, value;\n        if (dirtyChecklist.length > 0) {\n            for (var i = 0; i < dirtyChecklist.length; i++) {\n                n = dirtyChecklist[i];\n                value = n.object[n.prop];\n                if (!compareValues(n.orig, value)) {\n                    n.orig = clone(value);\n                    n.callback(value);\n                }\n            }\n        }\n\n    };\n\n    var compareValues =  function(a,b) {\n        var i, state = true;\n        if (a!==b)  {\n            if (isObject(a)) {\n                for(i in a) {\n                    if (!supportDefineProperty && i==='watchers') continue;\n                    if (a[i]!==b[i]) {\n                        state = false;\n                        break;\n                    };\n                }\n            }\n            else {\n                state = false;\n            }\n        }\n        return state;\n    }\n    \n    var pushToLengthSubjects = function(obj, prop, watcher, level){\n\n        var actual;\n\n        if (prop === \"$$watchlengthsubjectroot\") {\n            actual =  clone(obj);\n        } else {\n            actual = clone(obj[prop]);\n        }\n\n        lengthsubjects.push({\n            obj: obj,\n            prop: prop,\n            actual: actual,\n            watcher: watcher,\n            level: level\n        });\n    };\n\n    var removeFromLengthSubjects = function(obj, prop, watcher){\n        for (var i=0; i<lengthsubjects.length; i++) {\n            var subj = lengthsubjects[i];\n\n            if (subj.obj == obj) {\n                if (!prop || subj.prop == prop) {\n                    if (!watcher || subj.watcher == watcher) {\n                        // if we splice off one item at position i\n                        // we need to decrement i as the array is one item shorter\n                        // so when we increment i in the loop statement we\n                        // will land at the correct index.\n                        // if it's not decremented, you won't delete all length subjects\n                        lengthsubjects.splice(i--, 1);\n                    }\n                }\n            }\n        }\n\n    };\n    \n    var removeFromDirtyChecklist = function(obj, prop){\n        var notInUse;\n        for (var i=0; i<dirtyChecklist.length; i++) {\n            var n = dirtyChecklist[i];\n            var watchers = n.object.watchers;\n            notInUse = (\n                n.object == obj \n                && (!prop || n.prop == prop)\n                && watchers\n                && (!prop || !watchers[prop] || watchers[prop].length == 0 )\n            );\n            if (notInUse)  {\n                // we use the same syntax as in removeFromLengthSubjects\n                dirtyChecklist.splice(i--, 1);\n            }\n        }\n\n    };    \n\n    setInterval(loop, 50);\n\n    WatchJS.watch = watch;\n    WatchJS.unwatch = unwatch;\n    WatchJS.callWatchers = callWatchers;\n    WatchJS.suspend = suspend; // suspend watchers    \n    WatchJS.onChange = trackChange;  // track changes made to object or  it's property and return a single change object\n\n    return WatchJS;\n\n}));\n","// TODO: Read about JSDoc and add comments to it.\nexport default class SimpleTimer {\n  constructor({\n    time, events = {}, stepDivider = 100,\n  }) {\n    this.time = time;\n    this.remainigTime = time;\n    this.stepDivider = stepDivider;\n    this.events = events;\n  }\n\n  continue() {\n    if (this.interval) {\n      return;\n    }\n\n    // TODO: Think about step. Ex., 15 min => step +/- ~15 sec. (it's too much)\n    const step = this.time / this.stepDivider;\n    this.last = Date.now();\n\n    this.interval = setInterval(() => {\n      this.remainigTime -= (Date.now() - this.last);\n\n      if (this.remainigTime <= 0) {\n        this.stop();\n        return;\n      }\n      if (this.events.onProgress) {\n        this.events.onProgress(1 - this.remainigTime / this.time);\n      }\n      this.last = Date.now();\n    }, step);\n  }\n\n  start() {\n    this.remainigTime = this.time;\n    this.continue();\n  }\n\n  pause() {\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n\n  stop() {\n    clearInterval(this.interval);\n    this.interval = null;\n\n    if (this.events.onEnd) {\n      this.events.onEnd();\n    }\n  }\n\n  isActive() {\n    return Boolean(this.interval);\n  }\n}\n","/* eslint-disable no-console */\n\nimport SimpleTimer from './simple';\n\nexport default class PomodoroTimer {\n  constructor({ storage, startState = 'work', events = {} }) {\n    this.storage = storage;\n    this.events = events;\n    this.state = startState;\n\n    this.timer = new SimpleTimer({\n      time: 0,\n      events: {\n        onProgress: (progress) => {\n          if (this.events.onProgress) {\n            this.events.onProgress(progress);\n          }\n        },\n        onEnd: () => {\n          switch (this.state) {\n            case 'work': {\n              this.state = 'shortBreak';\n              break;\n            }\n            case 'shortBreak': {\n              this.state = 'work';\n              break;\n            }\n            // TODO: long break\n            default: {\n              console.error(`Unknown state name: ${this.state}`);\n            }\n          }\n          if (this.events.onEnd) {\n            this.events.onEnd(this.state);\n          }\n        },\n      },\n    });\n  }\n\n  start() {\n    // TODO: Replace it to key-value object\n    switch (this.state) {\n      case 'work': {\n        this.timer.time = this.storage.get('pomodoroSize');\n        break;\n      }\n      case 'shortBreak': {\n        this.timer.time = this.storage.get('shortBreakSize');\n        break;\n      }\n      case 'longBreak': {\n        this.timer.time = this.storage.get('longBreakSize');\n        break;\n      }\n      default: {\n        console.error('Unknown PomodoroTimer state');\n        return;\n      }\n    }\n\n    this.timer.start();\n  }\n\n  pause() {\n    this.timer.pause();\n  }\n\n  continue() {\n    this.timer.continue();\n  }\n\n  stop() {\n    this.timer.stop();\n  }\n}\n","export default (template = '') => {\n  const layout = document.createElement('div');\n  layout.className = 'layout';\n  layout.innerHTML = template;\n\n  return layout;\n};\n","/* eslint-disable no-param-reassign */\n\nimport { watch } from 'melanke-watchjs';\nimport PomodoroTimer from '../timers/pomodoro';\nimport createLayout from './layout';\n\nconst template = (`\n<div class=\"menu-row layout-row\">\n  <div class=\"stop-pomodoro-col menu-element\">\n    <button class=\"hided icon button stop-pomodoro-button\"></button>\n  </div>\n\n  <div class=\"settings-col menu-element\">\n    <button class=\"icon button settings-button\"></button>\n  </div>\n</div>\n<div class=\"pomodoro-status-row layout-row layout-row-max\">Start</div>\n<div class=\"pomodoro-progress-row layout-row layout-row-max\">0%</div>\n<div class=\"copyright-row layout-row\">by Seryiza</div>\n`);\n\n// Labels for pomodoro-status-row\nconst statusTexts = {\n  start: 'Start',\n  ticking: 'Pause',\n  paused: 'Paused',\n};\n\n// CSS classes for .layout\nconst pomodoroCssClasses = {\n  work: 'work-pomodoro',\n  shortBreak: 'short-break-pomodoro',\n  longBreak: 'long-break-pomodoro',\n};\n\nexport default (app) => {\n  const layout = createLayout(template);\n\n  // = Model =\n  const state = {\n    stateName: 'start',\n    pomodoroType: 'work',\n    progress: 0,\n    timer: null,\n  };\n\n  // = Controller =\n  // TODO: Think about component-architecture\n  state.timer = new PomodoroTimer({\n    storage: app.storage,\n    events: {\n      onProgress: (progress) => {\n        state.progress = progress;\n      },\n      onEnd: (pomodoroType) => {\n        state.stateName = 'start';\n        state.pomodoroType = pomodoroType;\n        state.progress = 0;\n      },\n    },\n  });\n\n  const pomodoroClick = () => {\n    switch (state.stateName) {\n      case 'start': {\n        state.stateName = 'ticking';\n        state.timer.start();\n        break;\n      }\n      case 'ticking': {\n        state.stateName = 'paused';\n        state.timer.pause();\n        break;\n      }\n      case 'paused': {\n        state.stateName = 'ticking';\n        state.timer.continue();\n        break;\n      }\n      default: {\n        console.error(`Unknown state name: '${state.stateName}'`);\n      }\n    }\n  };\n\n  const statusElem = layout.querySelector('.pomodoro-status-row');\n  const progressElem = layout.querySelector('.pomodoro-progress-row');\n  statusElem.addEventListener('click', pomodoroClick);\n  progressElem.addEventListener('click', pomodoroClick);\n\n  layout.querySelector('.settings-button').addEventListener('click', () => {\n    app.layouts.goto('settings');\n  });\n\n  layout.querySelector('.stop-pomodoro-button').addEventListener('click', () => {\n    state.timer.stop();\n  });\n\n  // = View =\n  const stopPomodoroElem = layout.querySelector('.stop-pomodoro-button');\n\n  // Change status text (click to start / pause / continue) when stateName changes\n  watch(state, 'stateName', () => {\n    statusElem.textContent = statusTexts[state.stateName];\n\n    switch (state.stateName) {\n      case 'paused':\n      case 'ticking': {\n        stopPomodoroElem.classList.remove('hided');\n        break;\n      }\n      default: {\n        stopPomodoroElem.classList.add('hided');\n        break;\n      }\n    }\n  });\n\n  // Update progress bar\n  const textProgress = layout.querySelector('.pomodoro-progress-row');\n  watch(state, 'progress', () => {\n    textProgress.textContent = `${Math.round(state.progress * 100)}%`;\n  });\n\n  // Change css-class when pomodoroType changes\n  watch(state, 'pomodoroType', () => {\n    layout.classList.remove(...Object.values(pomodoroCssClasses));\n    layout.classList.add(pomodoroCssClasses[state.pomodoroType]);\n  });\n  // First adding class on start\n  layout.classList.add(pomodoroCssClasses[state.pomodoroType]);\n\n  return layout;\n};\n","const identity = x => x;\n\nexport default class FormWrapper {\n  static getStartValues(inputs = {}) {\n    return Object.keys(inputs)\n      .filter(name => inputs[name].start)\n      .reduce((acc, name) => ({ ...acc, [name]: inputs[name].start }), {});\n  }\n\n  constructor(formElement, inputs = {}, events = {}) {\n    this.form = formElement;\n    this.inputs = inputs;\n    this.events = events;\n\n    // Fill this.values by start values from inputs[key].start\n    // and this.events.onStart (if exists)\n    this.values = FormWrapper.getStartValues(inputs);\n\n    if (this.events.onStart) {\n      const newValues = {};\n      this.events.onStart(newValues);\n      this.values = Object.assign(this.values, newValues);\n    }\n    this.fillStartValues(this.values);\n\n    this.form.addEventListener('submit', (event) => {\n      // Cancel sending a request\n      event.preventDefault();\n\n      Array.from(this.form.elements).forEach((elem) => {\n        // TODO: Read about radio / select. Maybe, there's an error.\n        // TODO: Maybe rewrite this code? (without side effects)\n        this.setValue(elem.name, elem.value);\n      });\n\n      if (this.events.onSubmit) {\n        const copy = Object.assign({}, this.values);\n        this.events.onSubmit(copy);\n      }\n    });\n  }\n\n  // TODO: Think about DRY\n  getCastFn(name) {\n    if (name in this.inputs && this.inputs[name].cast) {\n      return this.inputs[name].cast;\n    }\n    return identity;\n  }\n\n  getInputFn(name) {\n    if (name in this.inputs && this.inputs[name].input) {\n      return this.inputs[name].input;\n    }\n    return identity;\n  }\n\n  getOutputFn(name) {\n    if (name in this.inputs && this.inputs[name].output) {\n      return this.inputs[name].output;\n    }\n    return identity;\n  }\n\n  setValue(name, value) {\n    const cast = this.getCastFn(name);\n    const fn = this.getInputFn(name);\n    this.values[name] = fn(cast(value));\n  }\n\n  getValue(name) {\n    const cast = this.getCastFn(name);\n    const fn = this.getOutputFn(name);\n    return fn(cast(this.values[name]));\n  }\n\n  setStartValue(name, value) {\n    const cast = this.getCastFn(name);\n    this.values[name] = cast(value);\n  }\n\n  fillStartValues(startValues) {\n    Object.keys(startValues).forEach((key) => {\n      this.setStartValue(key, startValues[key]);\n      this.form.elements[key].value = this.getValue(key);\n    });\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { watch } from 'melanke-watchjs';\nimport createLayout from './layout';\nimport FormWrapper from '../formWrapper';\n\nconst template = (`\n<div class=\"menu-row layout-row flex-end\">\n  <div class=\"settings-col menu-element\">\n    <button class=\"icon button settings-button\"></button>\n  </div>\n</div>\n<div class=\"settings-row layout-row layout-row-max\">\n  <h2 class=\"settings-header\">Settings</h2>\n  <form class=\"settings-form\">\n    <label class=\"settings-label\">\n      <div class=\"settings-label-text\">Work Time (min.):</div>\n      <input name=\"work-time\" class=\"settings-input work-time-input\" type=\"number\" min=\"1\">\n    </label>\n    <label class=\"settings-label\">\n      <div class=\"settings-label-text\">Short Break Time (min.):</div>\n      <input name=\"short-break-time\" class=\"settings-input short-break-time-input\" type=\"number\" min=\"1\">\n    </label>\n    <label class=\"settings-label\">\n      <div class=\"settings-label-text\">Long Break Time (min.):</div>\n      <input name=\"long-break-time\" class=\"settings-input long-break-time-input\" type=\"number\" min=\"1\">\n    </label>\n    <label class=\"settings-label\">\n      <div class=\"settings-label-text\">Short Breaks Count Before Long Ones:</div>\n      <input name=\"cycles-count\" class=\"settings-input cycles-before-long-break-input\" type=\"number\" min=\"1\">\n    </label>\n    <label class=\"settings-label\">\n      <div class=\"settings-label-text\">End of Pomodoro Sound:</div>\n      todo\n    </label>\n    <label class=\"settings-label\">\n      <div class=\"settings-label-text\">End of Pomodoro Notification:</div>\n      todo\n    </label>\n\n    <button name=\"save-button\" class=\"button save-button\">Save</button>\n  </form>\n</div>\n<div class=\"copyright-row layout-row\">by Seryiza</div>\n`);\n\nexport default (app) => {\n  const layout = createLayout(template);\n  layout.classList.add('settings-layout');\n\n  // = Model =\n  const state = {\n    // TODO: maybe is there better idea for this?\n    // TODO: export consts like 'pomodoroSize' in other (shared) file\n    pomodoroSize: null,\n    shortBreakSize: null,\n    longBreakSize: null,\n    cyclesCount: null,\n    lastSaveTime: null,\n  };\n\n  // = Controller =\n  layout.querySelector('.settings-button').addEventListener('click', () => {\n    app.layouts.goto('timer');\n  });\n\n  // Form processing (using FormWrapper module)\n  const millisecondsInMinute = 60 * 1000;\n  const minutesFromMillisecondsInput = {\n    cast: x => Number(x),\n    input: x => x * millisecondsInMinute,\n    output: x => x / millisecondsInMinute,\n  };\n  const settingsInputs = {\n    'work-time': minutesFromMillisecondsInput,\n    'short-break-time': minutesFromMillisecondsInput,\n    'long-break-time': minutesFromMillisecondsInput,\n    'cycles-count': { cast: x => Number(x) },\n  };\n\n  // List to read from/write to app.storage and inputs\n  const inputNamesAndStorageKeys = [\n    { inputName: 'work-time', storageKey: 'pomodoroSize' },\n    { inputName: 'short-break-time', storageKey: 'shortBreakSize' },\n    { inputName: 'long-break-time', storageKey: 'longBreakSize' },\n    { inputName: 'cycles-count', storageKey: 'cyclesCount' },\n  ];\n\n  const formElem = layout.querySelector('.settings-form');\n  // eslint-disable-next-line no-unused-vars\n  const formWrapper = new FormWrapper(formElem, settingsInputs, {\n    onStart: (formData) => {\n      inputNamesAndStorageKeys.forEach((inputData) => {\n        formData[inputData.inputName] = app.storage.get(inputData.storageKey);\n      });\n    },\n    onSubmit: (formData) => {\n      inputNamesAndStorageKeys.forEach((inputData) => {\n        app.storage.set(inputData.storageKey, formData[inputData.inputName]);\n      });\n\n      state.lastSaveTime = Date.now();\n    },\n  });\n\n  // = View =\n  watch(state, 'lastSaveTime', () => {\n    // TODO: scroll up and show message on layout\n    alert('Preferences saved!');\n  });\n\n  return layout;\n};\n","import ObjectBasedStorage from './storages/objectBased';\nimport LocalBasedStorage from './storages/localBased';\nimport LayoutManager from './layoutManager';\nimport TimerLayout from './layouts/timerLayout';\nimport SettingsLayout from './layouts/settingsLayout';\n\nexport default class PomodoroApp {\n  constructor({ elem, defaultsPreferences = {} }) {\n    this.elem = elem;\n\n    // Create app storage\n    const defaults = new ObjectBasedStorage(defaultsPreferences);\n    const locals = new LocalBasedStorage(defaults);\n    this.storage = locals;\n\n    // Create layout manager\n    this.layouts = new LayoutManager({\n      start: 'settings',\n      layouts: {\n        timer: TimerLayout(this),\n        settings: SettingsLayout(this),\n      },\n      events: {\n        onChange: (layoutManager, nextLayout) => {\n          // Clean current layout and render (append to this.elem) new layout\n          const component = layoutManager.layout(nextLayout);\n          this.elem.innerHTML = '';\n          this.elem.append(component);\n        },\n      },\n    });\n  }\n}\n","import PomodoroApp from './app';\n\nexport default new PomodoroApp({\n  elem: document.querySelector('#app'),\n  defaultsPreferences: {\n    // TODO: Think about naming\n    pomodoroSize: 25 * 60 * 1000,\n    shortBreakSize: 5 * 60 * 1000,\n    longBreakSize: 30 * 60 * 1000,\n    cyclesCount: 4,\n  },\n});\n"]}